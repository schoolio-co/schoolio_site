# Generated by Django 2.2.1 on 2019-09-25 21:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_parent', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekly_goal', models.CharField(max_length=500)),
                ('subject', models.CharField(max_length=500)),
                ('week_of', models.CharField(max_length=5)),
                ('standard', models.CharField(max_length=500)),
                ('intro', models.CharField(max_length=500)),
                ('activity', models.TextField(max_length=1000)),
                ('wrap_up', models.CharField(max_length=500, verbose_name='Essential Questions')),
                ('resources', models.CharField(max_length=100)),
                ('bl', models.CharField(max_length=50)),
                ('mi1', models.CharField(max_length=50)),
                ('mi2', models.CharField(max_length=50)),
                ('mi3', models.CharField(max_length=50)),
                ('vocabulary', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('period', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='assessments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment', models.CharField(max_length=150)),
                ('is_formal', models.BooleanField(default=False)),
                ('is_final', models.BooleanField(default=False)),
                ('is_informal', models.BooleanField(default=False)),
                ('total_possible', models.IntegerField()),
                ('lu_low', models.CharField(max_length=30)),
                ('lu_med', models.CharField(max_length=30)),
                ('lu_high', models.CharField(max_length=30)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.activities')),
            ],
        ),
        migrations.CreateModel(
            name='classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Classroom', models.CharField(max_length=30)),
                ('grade_level', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='day_of_the_week',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='school',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('address', models.TextField(max_length=250)),
                ('url', models.SlugField(help_text='www.schoolio.co/....', unique=True, verbose_name='www.schoolio.co/....')),
            ],
        ),
        migrations.CreateModel(
            name='standards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_level', models.TextField(max_length=50)),
                ('subject', models.TextField(max_length=500)),
                ('standard', models.TextField(max_length=500)),
                ('skill_topic', models.TextField(max_length=500)),
                ('objective', models.TextField(max_length=500)),
                ('competency', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject', models.CharField(max_length=100)),
                ('monday_first', models.BooleanField(default=False)),
                ('monday_second', models.BooleanField(default=False)),
                ('monday_third', models.BooleanField(default=False)),
                ('monday_fourth', models.BooleanField(default=False)),
                ('monday_fifth', models.BooleanField(default=False)),
                ('monday_sixth', models.BooleanField(default=False)),
                ('monday_seventh', models.BooleanField(default=False)),
                ('monday_eigth', models.BooleanField(default=False)),
                ('tuesday_first', models.BooleanField(default=False)),
                ('tuesday_second', models.BooleanField(default=False)),
                ('tuesday_third', models.BooleanField(default=False)),
                ('tuesday_fourth', models.BooleanField(default=False)),
                ('tuesday_fifth', models.BooleanField(default=False)),
                ('tuesday_sixth', models.BooleanField(default=False)),
                ('tuesday_seventh', models.BooleanField(default=False)),
                ('tuesday_eigth', models.BooleanField(default=False)),
                ('wednesday_first', models.BooleanField(default=False)),
                ('wednesday_second', models.BooleanField(default=False)),
                ('wednesday_third', models.BooleanField(default=False)),
                ('wednesday_fourth', models.BooleanField(default=False)),
                ('wednesday_fifth', models.BooleanField(default=False)),
                ('wednesday_sixth', models.BooleanField(default=False)),
                ('wednesday_seventh', models.BooleanField(default=False)),
                ('wednesday_eigth', models.BooleanField(default=False)),
                ('thursday_first', models.BooleanField(default=False)),
                ('thursday_second', models.BooleanField(default=False)),
                ('thursday_third', models.BooleanField(default=False)),
                ('thursday_fourth', models.BooleanField(default=False)),
                ('thursday_fifth', models.BooleanField(default=False)),
                ('thursday_sixth', models.BooleanField(default=False)),
                ('thursday_seventh', models.BooleanField(default=False)),
                ('thursday_eigth', models.BooleanField(default=False)),
                ('friday_first', models.BooleanField(default=False)),
                ('friday_second', models.BooleanField(default=False)),
                ('friday_third', models.BooleanField(default=False)),
                ('friday_fourth', models.BooleanField(default=False)),
                ('friday_fifth', models.BooleanField(default=False)),
                ('friday_sixth', models.BooleanField(default=False)),
                ('friday_seventh', models.BooleanField(default=False)),
                ('friday_eigth', models.BooleanField(default=False)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.classroom')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='student_profiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_ref', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('grade_level', models.CharField(max_length=30)),
                ('d_o_b', models.DateTimeField(blank=True, null=True)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school')),
            ],
        ),
        migrations.CreateModel(
            name='student_assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_mark', models.IntegerField()),
                ('assessment_score', models.IntegerField()),
                ('understanding_level', models.CharField(max_length=100)),
                ('assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.assessments')),
                ('student', models.ManyToManyField(blank=True, to='schoolio.student_profiles')),
            ],
        ),
        migrations.CreateModel(
            name='lesson_school_info',
            fields=[
                ('school_lesson_id', models.AutoField(primary_key=True, serialize=False)),
                ('week_of', models.CharField(max_length=30)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('subject', models.CharField(max_length=100)),
                ('objective', models.TextField(max_length=500)),
                ('planning_teacher', models.CharField(max_length=30)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.classroom')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school')),
            ],
        ),
        migrations.CreateModel(
            name='grade_level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=30)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(default='main', max_length=30)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school')),
            ],
        ),
        migrations.CreateModel(
            name='create_updates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_title', models.TextField(max_length=150)),
                ('update', models.TextField(max_length=1000)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school')),
            ],
        ),
        migrations.CreateModel(
            name='classroom_subject_summary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField()),
                ('lu_level', models.FloatField(blank=True, null=True)),
                ('mu_level', models.FloatField(blank=True, null=True)),
                ('hu_level', models.FloatField(blank=True, null=True)),
                ('logical_level', models.IntegerField()),
                ('linguistic_level', models.IntegerField()),
                ('kinesthetic_level', models.IntegerField()),
                ('musical_level', models.IntegerField()),
                ('visual_level', models.IntegerField()),
                ('naturalist_level', models.IntegerField()),
                ('group_level', models.IntegerField()),
                ('independent_level', models.IntegerField()),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.classroom')),
                ('lesson_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.lesson_school_info')),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='student',
            field=models.ManyToManyField(blank=True, related_name='student', to='schoolio.student_profiles'),
        ),
        migrations.AddField(
            model_name='assessments',
            name='classroom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.classroom'),
        ),
        migrations.AddField(
            model_name='assessments',
            name='school_lesson_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.lesson_school_info'),
        ),
        migrations.AddField(
            model_name='activities',
            name='school_lesson_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.lesson_school_info'),
        ),
        migrations.AddField(
            model_name='user',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='school_user',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_role', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('username', models.CharField(max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolio.school')),
            ],
        ),
    ]
